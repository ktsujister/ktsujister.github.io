<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Tech Blog]]></title>
  <link href="http://ktsujister.github.io/atom.xml" rel="self"/>
  <link href="http://ktsujister.github.io/"/>
  <updated>2014-09-06T17:20:19+09:00</updated>
  <id>http://ktsujister.github.io/</id>
  <author>
    <name><![CDATA[ktsujister]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Various Distributions With Incanter]]></title>
    <link href="http://ktsujister.github.io/blog/2014/08/30/various-distributions-with-incanter/"/>
    <updated>2014-08-30T18:52:17+09:00</updated>
    <id>http://ktsujister.github.io/blog/2014/08/30/various-distributions-with-incanter</id>
    <content type="html"><![CDATA[<p>I was looking for ways to get random numbers from various distributions in Clojure.<br/>
Here&rsquo;s how I got it with <a href="https://github.com/incanter/incanter">Incanter</a>.</p>

<p>Below are the list of distributions mentioned in this page.</p>

<ul>
<li><a href="#uniform-distribution">Uniform distribution</a></li>
<li><a href="#exponential-distribution">Exponential distribution</a></li>
<li><a href="#beta-distribution">Beta distribution</a></li>
</ul>


<p>Through out this page, I used below project.clj.</p>

<div><script src='https://gist.github.com/7857ffebf577dcaa9062.js'></script>
<noscript><pre><code>(defproject various-distributions &quot;0.1.0-SNAPSHOT&quot;
  :description &quot;FIXME: write description&quot;
  :url &quot;http://example.com/FIXME&quot;
  :license {:name &quot;Eclipse Public License&quot;
            :url &quot;http://www.eclipse.org/legal/epl-v10.html&quot;}
  :dependencies [[org.clojure/clojure &quot;1.6.0&quot;]
                 [incanter/incanter-core &quot;1.5.5&quot;]
                 [incanter/incanter-charts &quot;1.5.5&quot;]]
  ;; :jvm-opts ^:replace []
  :main ^:skip-aot various-distributions.core
  :target-path &quot;target/%s&quot;
  :profiles {:uberjar {:aot :all}})
</code></pre></noscript></div>


<h2><a id="uniform-distribution"></a>Uniform distribution</h2>

<p>Probability density function(PDF) of Uniform Distribution:<br/>
<img class="no-border" src="http://upload.wikimedia.org/math/8/f/b/8fbfebfbb3dfa135da807a45374376d5.png" title="'PDF of uniform distribution'" ><br/>
<img class="no-border" src="http://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Uniform_Distribution_PDF_SVG.svg/250px-Uniform_Distribution_PDF_SVG.svg.png" title="'PDF plot of uniform distribution'" ><br/>
(From <a href="http://en.wikipedia.org/wiki/Uniform_distribution_(continuous)">http://en.wikipedia.org/wiki/Uniform_distribution_(continuous)</a>)</p>

<div><script src='https://gist.github.com/f8197a3f18f9857e4be8.js'></script>
<noscript><pre><code>(ns various-distributions.uniform
  (:require [incanter.charts :as c]
            [incanter.core :as i]
            [incanter.distributions :as d]))

(defn show-uniform-distribution []
  (let [dist (d/uniform-distribution 0.0 1.0)
        n 10000
        x (repeatedly n #(d/draw dist))
        pdf-fn #(d/pdf dist %)]
    (let [nbins 50
          series-label &quot;uniform&quot;]
      (-&gt; (c/histogram x :nbins nbins :density true :series-label series-label)
          (c/add-function pdf-fn 0 1 :series-label &quot;uniform-pdf&quot;)
          i/view))))
</code></pre></noscript></div>


<p>This is pretty straight forward.</p>

<p>Here&rsquo;s the plot. Red line is theoretical value.</p>

<p><img class="no-border" src="http://ktsujister.github.io/images/distributions/incanter-uniform.png" title="'uniform distribution incanter'" ></p>

<p>Below is the reference scipy version, and it&rsquo;s plot.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">uniform</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="kn">as</span> <span class="nn">plt</span>
</span><span class='line'>
</span><span class='line'><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">()</span>
</span><span class='line'><span class="n">N</span> <span class="o">=</span> <span class="mi">10000</span>
</span><span class='line'><span class="n">rv</span> <span class="o">=</span> <span class="n">uniform</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="mf">0.0</span><span class="p">,</span> <span class="n">scale</span><span class="o">=</span><span class="mf">1.0</span><span class="p">)</span>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">rv</span><span class="o">.</span><span class="n">rvs</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="n">N</span><span class="p">)</span>
</span><span class='line'><span class="n">nbins</span> <span class="o">=</span> <span class="mi">50</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">nbins</span><span class="p">,</span> <span class="n">normed</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span> <span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span> <span class="mi">100</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">uniform</span><span class="o">.</span><span class="n">pdf</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="s">&#39;r-&#39;</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">&#39;uniform pdf&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><img class="no-border" src="http://ktsujister.github.io/images/distributions/scipy-uniform.png" title="'uniform distribution scipy'" ></p>

<h2><a id="exponential-distribution"></a>Exponential distribution</h2>

<p>PDF of Exponential Distribution:<br/>
<img class="no-border" src="http://upload.wikimedia.org/math/c/d/7/cd793311c87db5a323617afba5963e28.png" title="'PDF of Exponential Distribution'" ><br/>
<img class="no-border" src="http://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Exponential_pdf.svg/325px-Exponential_pdf.svg.png" title="'PDF plot of Exponential Distribution plot'" ><br/>
(From <a href="http://en.wikipedia.org/wiki/Exponential_distribution">http://en.wikipedia.org/wiki/Exponential_distribution</a>)</p>

<div><script src='https://gist.github.com/7ffee3319f15dfa42376.js'></script>
<noscript><pre><code>(ns various-distributions.exponential
  (:require [incanter.charts :as c]
            [incanter.core :as i]
            [incanter.distributions :as d]
            [incanter.stats :as s]))

(defn show-exponential-distribution []
  (let [dist (d/exponential-distribution 1.0)
        n 100000
        x (repeatedly n #(d/draw dist))
        pdf-fn #(d/pdf dist %)]
    (let [nbins 50
          series-label &quot;exponential&quot;
          [x-min x-max] (s/quantile x :probs [0.01 0.99])]
      (-&gt; (c/histogram x :nbins nbins :density true :series-label series-label)
          (c/set-x-range x-min x-max)
          (c/add-function pdf-fn x-min x-max :series-label &quot;exponential-pdf&quot;)
          i/view))))
</code></pre></noscript></div>


<p>Since incanter didn&rsquo;t have ppf(Percent point function, inverse of cdf), I used percentile of the created random values to get lower and upper range for drawing plot.</p>

<p><img class="no-border" src="http://ktsujister.github.io/images/distributions/incanter-exponential.png" title="&#34;incanter exponential plot&#34;" alt="&#34;incanter exponential plot&#34;"></p>

<p>Below is the reference scipy version, and it&rsquo;s plot.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">expon</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="kn">as</span> <span class="nn">plt</span>
</span><span class='line'>
</span><span class='line'><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">()</span>
</span><span class='line'><span class="n">N</span> <span class="o">=</span> <span class="mi">100000</span>
</span><span class='line'><span class="n">rv</span> <span class="o">=</span> <span class="n">expon</span><span class="p">(</span><span class="n">scale</span><span class="o">=</span><span class="mf">1.0</span><span class="p">)</span>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">rv</span><span class="o">.</span><span class="n">rvs</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="n">N</span><span class="p">)</span>
</span><span class='line'><span class="n">nbins</span> <span class="o">=</span> <span class="mi">50</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">nbins</span><span class="p">,</span> <span class="n">normed</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mf">0.01</span><span class="p">),</span> <span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mf">0.99</span><span class="p">),</span> <span class="mi">1000</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">rv</span><span class="o">.</span><span class="n">pdf</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="s">&#39;r-&#39;</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">&#39;uniform pdf&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">xlim</span><span class="p">((</span><span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mf">0.01</span><span class="p">),</span> <span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mf">0.99</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><img class="no-border" src="http://ktsujister.github.io/images/distributions/scipy-expon.png" title="&#34;scipy exponential plot&#34;" alt="&#34;scipy exponential plot&#34;"></p>

<h2><a id="beta-distribution"></a>Beta distribution</h2>

<p><img class="no-border" src="http://upload.wikimedia.org/math/a/3/0/a308447ab156616c5dbe3cc69d65a7cc.png" title="'PDF of Beta distribution'" ><br/>
<img class="no-border" src="http://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Beta_distribution_pdf.svg/325px-Beta_distribution_pdf.svg.png" title="'PDF plot of Beta distribution'" ><br/>
(From <a href="http://en.wikipedia.org/wiki/Beta_distribution">http://en.wikipedia.org/wiki/Beta_distribution</a>)</p>

<div><script src='https://gist.github.com/924a6fc4556ea829a770.js'></script>
<noscript><pre><code>(ns various-distributions.beta
  (:require [incanter.charts :as c]
            [incanter.core :as i]
            [incanter.distributions :as d]
            [incanter.stats :as s]))

(defn show-beta-distribution []
  (let [dist (d/beta-distribution 2 5)
        n 100000
        x (repeatedly n #(d/draw dist))
        pdf-fn #(d/pdf dist %)]
    (let [nbins 50
          series-label &quot;gamma&quot;
          [x-min x-max] (s/quantile x :probs [0.01 0.99])]
      (-&gt; (c/histogram x :nbins nbins :density true :series-label series-label)
          (c/set-x-range x-min x-max)
          (c/add-function pdf-fn x-min x-max :series-label series-label)
          i/view))))
</code></pre></noscript></div>


<p><img class="no-border" src="http://ktsujister.github.io/images/distributions/incanter-beta-a2-b5.png" title="&#34;incanter beta distribution(a=2, b=5)&#34;" alt="&#34;incanter beta distribution(a=2, b=5)&#34;"></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">scipy.stats</span> <span class="kn">import</span> <span class="n">beta</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="kn">as</span> <span class="nn">plt</span>
</span><span class='line'>
</span><span class='line'><span class="n">np</span><span class="o">.</span><span class="n">random</span><span class="o">.</span><span class="n">seed</span><span class="p">()</span>
</span><span class='line'><span class="n">N</span> <span class="o">=</span> <span class="mi">100000</span>
</span><span class='line'><span class="n">rv</span> <span class="o">=</span> <span class="n">beta</span><span class="p">(</span><span class="n">a</span><span class="o">=</span><span class="mf">2.0</span><span class="p">,</span> <span class="n">b</span><span class="o">=</span><span class="mf">5.0</span><span class="p">)</span>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">rv</span><span class="o">.</span><span class="n">rvs</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="n">N</span><span class="p">)</span>
</span><span class='line'><span class="n">nbins</span> <span class="o">=</span> <span class="mi">50</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">hist</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">nbins</span><span class="p">,</span> <span class="n">normed</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">linspace</span><span class="p">(</span><span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mf">0.01</span><span class="p">),</span> <span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mf">0.99</span><span class="p">),</span> <span class="mi">1000</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">rv</span><span class="o">.</span><span class="n">pdf</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="s">&#39;r-&#39;</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">&#39;uniform pdf&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">xlim</span><span class="p">((</span><span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mf">0.01</span><span class="p">),</span> <span class="n">rv</span><span class="o">.</span><span class="n">ppf</span><span class="p">(</span><span class="mf">0.99</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><img class="no-border" src="http://ktsujister.github.io/images/distributions/scipy-beta-a2-b5.png" title="&#34;scipy beta plot(a=2, b=5)&#34;" alt="&#34;scipy beta plot(a=2, b=5)&#34;"></p>

<h2>References</h2>

<p>Helpful references were:</p>

<ul>
<li><p><a href="http://aidiary.hatenablog.com/entry/20140620/1403272044">http://aidiary.hatenablog.com/entry/20140620/1403272044</a></p>

<p>This person was doing similar thing in python.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress]]></title>
    <link href="http://ktsujister.github.io/blog/2014/08/19/octopress/"/>
    <updated>2014-08-19T23:53:45+09:00</updated>
    <id>http://ktsujister.github.io/blog/2014/08/19/octopress</id>
    <content type="html"><![CDATA[<p>Started blog page using <a href="https://github.com/imathis/octopress">octopress</a>.<br/>
Followed instructions on <a href="http://tantant.jp/blog/Octopress/installing-octopress/">this page</a>, and <a href="http://octopress.org/docs/setup/">here</a>.</p>

<p>While installing octopress, I encountered below error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> ! [rejected]        master -&gt; master (non-fast-forward)</span></code></pre></td></tr></table></div></figure>


<p>I was able to get this fixed by following <a href="http://stackoverflow.com/questions/17609453/rake-gen-deploy-rejected-in-octopress">this</a> in stackoverflow.</p>
]]></content>
  </entry>
  
</feed>
